/**********************************************************************************
// Animation (Arquivo de Cabeçalho)
// 
// Criação:     28 Set 2011
// Atualização: 12 Mar 2023
// Compilador:  Visual C++ 2022
//
// Descrição:   Classe para animar sequências em folha de sprites
//
**********************************************************************************/

#ifndef _PROGJOGOS_ANIMATION_H_
#define _PROGJOGOS_ANIMATION_H_

// ---------------------------------------------------------------------------------

#include "Sprite.h"              // tipo sprite para renderização
#include "TileSet.h"             // folha de sprites da animação
#include "Timer.h"               // tempo entre quadros da animação
#include "Types.h"               // tipos específicos da engine

// ---------------------------------------------------------------------------------

class Animation
{
private:
    uint  iniFrame;             // quadro inicial da seqüência
    uint  endFrame;             // quadro final da seqüência
    uint  frame;                // quadro atual da animação    
    bool  animLoop;             // animação em loop infinito
    float animDelay;            // espaço de tempo entre quadros (em segundos)
    Timer timer;                // medidor de tempo entre quadros da animação
    TileSet * tileSet;          // ponteiro para folha de sprites da animação
    SpriteData sprite;          // sprite a ser desenhado

public:
    Animation(TileSet* tiles, float delay, bool repeat);                
    
    void Draw(                                      // desenha o quadro atual da animação
        float x, float y, float z = Layer::MIDDLE,  // coordenadas da tela
        Color color = { 1, 1, 1, 1 });              // efeito de cor

    void Draw(                                      // desenha um quadro da folha de sprites    
        uint aFrame,                                // quadro da folha a desenhar
        float x, float y, float z = Layer::MIDDLE,  // coordenadas da tela
        Color color = { 1, 1, 1, 1 });              // efeito de cor

    void Frame(uint aFrame);    // define o frame atual da animação
    uint Frame();               // retorna o frame de animação ativo
    bool Inactive();            // verifica se a animação já encerrou
    void NextFrame();           // passa para o próximo frame da animação
    void Restart();             // reinicia a animacão (pelo primeiro frame)
}; 

// ---------------------------------------------------------------------------------
// funções membro inline

// desenha quadro atual da animação
inline void Animation::Draw(float x, float y, float z, Color color)
{ Draw(frame, x, y, z, color); }

// define o frame atual da animação
inline void Animation::Frame(uint aFrame)
{ frame = aFrame; }

// retorna o frame de animação ativo
inline unsigned Animation::Frame()
{ return frame; }

// verifica se a animação já encerrou
inline bool Animation::Inactive()
{ return !animLoop && (frame > endFrame || (frame == endFrame && timer.Elapsed(animDelay))); }

// reinicia a animacão (pelo primeiro frame da sequencia)
inline void Animation::Restart()
{ frame = 0; timer.Start(); }

// ---------------------------------------------------------------------------------

#endif
